@import url(//fonts.googleapis.com/css?family=Nunito);


:root {
    font-size: 4vw;
    -webkit-tap-highlight-color: transparent;
    --game-left: 0;
    --game-right: 0;
    --game-top: 0;
    --game-bottom: 0;

    

    --wrongglow: 0px 0px 24.192px rgb(247, 107, 26), 
    0px 0px 13.824px rgb(247, 107, 26), 
    0px 0px 8.064px rgb(247, 107, 26), 
    0px 0px 4.032px rgb(247, 107, 26), 
    0px 0px 1.152px rgb(247, 107, 26), 
    0px 0px 0.576px rgb(247, 107, 26);

    --rightglow: 0px 0px 24.192px #04D000, 
    0px 0px 13.824px #04D000, 
    0px 0px 8.064px #04D000, 
    0px 0px 4.032px #04D000, 
    0px 0px 1.152px #04D000, 
    0px 0px 0.576px #04D000;

    --stroke-width: 2px;
    --diffColor: seagreen;
    --finishedColor: gold;
    --correct-color: hwb(85 10% 10%);
    /*--correct-color-darker: seagreen;*/
    --correct-color-darker: hsl(85, 50%, 30%); 
    --correct-color-lighter: hwb(85 40% 10%);
    --wrong-color: hwb(40 10% 0%);
    --wrong-color-darker: hsl(40, 50%, 30%);
    --wrong-color-lighter: hwb(40 40% 10%);
    --almost-black: hsl(210, 8%, 14%);
    --lighter-border: hwb(0 67% 33%);
    --almost-white: #F6F6F6;
    --dark-white: #F0F0F0;
    --stroke-color: var(--almost-black);
    --letterSquare-border-width: min(3px, 0.5vw);
    --letterInput-border-width: min(4px, 0.75vw);
    --letterInput-border-radius: min(42px, 3.5vw);
    --same-letter-color-hwb: rgb(26, 97, 230);
    --same-letter-color: 26, 97, 230;
}


html {
  font-family: Nunito;
  color: var(--almost-black);
}
body {
  display: flex;
  background-color: var(--almost-white);
  margin: 0;
}
input { /* Override default which is smaller */
    font-size: 1rem; 
}

#scrambler_title {
    display: flex;
    font-weight: 600;
}

#scrambler_title span {
    display: flex;
    align-self: center;
}

#version_update_button {
  display: flex;
  align-self: flex-start;
}

.notify-button {
  
    background: lightgray;
    transition: all 1s ease-in;
  width: 1.2em !important;
  height: 1.2em !important;
  padding: 0;
  margin: 0;
  padding-block: 0;
  padding-inline: 0;
  border: 0.1em solid black;
}

#version_update_text {
    font-size: 0.8rem;
  text-align: left;
  pointer-events: none;
}

.fullscreen-modal {
    font-size: 0.8rem;
    position: fixed; /* Needs to be placed as child of containall, so that if fills THAT container */
    top: 0%; /* Default is closed */
  left: var(--game-left);
  right: var(--game-right);
  /* max-height: calc(var(--pageHeight) - 1rem); */
  bottom: 0;
  overflow: scroll;
  z-index: 20;
  padding: 1rem; 
  background-color: var(--dark-white);
  
  /* background: linear-gradient(var(--dark-white) 0 80%, var(--dark-white) 80%, rgba(0, 0, 0, 0) 100%); */

  visibility: hidden;
  transform: translateY(100vh);
  transition: all 2s ease-in-out;
}

.fullscreen-modal.opened {
    top: 0;
    transform: translateY(0%);
    visibility: visible;
}


#containall { /* on Phones */
  display: flex;
  width: 100%;
  overflow: hidden;
  height: calc(var(--pageHeight) + 2rem);
  margin-left: auto;
  margin-right: auto;
  background-color: rgb(231, 243, 239);
  
}
@media (min-aspect-ratio: 6/9) { /* Wider screens */
    :root {
        font-size: 2.2vw;
        --game-left: 22.5%;
        --game-right: 22.5%;
    }
    #containall {
    position: relative;
    width: 55%;
    }
    #keyboard-cont {
        display: none;
    }
}

#gameBox {
    /* border: 0.2em solid var(--almost-black);
  border-radius: 1em; */
  overflow: hidden;
  transition: margin 1s cubic-bezier(0.17, 0.04, 0.03, 0.94);
  align-self: stretch;
  padding: 1rem;
}
.gameBox.slide_down {
  margin-bottom: calc(3.5em - 1rem); /* banner height less padding */
}
button {
    
    font-family: Nunito;
    border-width: 0.2em;
  border-radius: 0.5rem;
  justify-content: center;
  outline: 0;
  cursor: pointer;
}
.input_button {
    border-radius: 0.3em;
    margin-top: 1em;
    margin-bottom: 1em;
    padding: 0.2em;
}
.material-icons-round {
    font-size: 3em !important;
}
input {
  margin: 0.25rem;
}

.switch-field {
  display: flex;
  overflow: hidden;
  justify-self: flex-start;
}

.switch-field input {
  position: absolute !important; /* Hides input, so label replaces */
  clip-path: rect(0, 0, 0, 0);
  height: 1px;
  width: 1px;
  border: 0;
  overflow: hidden;
}


.switch-field label:hover {
  cursor: pointer;
}

.switch-field input:checked + label {
  background-color: #a5dc86;
  box-shadow: none;
}

.switch-field label:first-of-type {
  border-radius: 2em 0 0 2em ;
}

.switch-field label:last-of-type {
  border-radius: 0 2em 2em 0;
}

.between {
  justify-content: space-around !important;
  align-items: center;
  align-content: center;
}

#refresh_guess {
  display: flex;
  align-self: center;
  border-radius: 2em; /* match switch-field label:last-of-type */
  justify-self: flex-end;
}
.game-button {
    text-align: center;
    font-size: 0.8rem;
    display: flex;
    align-self: center;
    padding: 0.5em 1em;
    background-color: lightgrey;
    
  border: 0.05em solid var(--almost-black);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease-in-out;
  
}

.right-game-buttons {
    display: flex;
    justify-content: right;
    margin: var(--letterBoxMargin);
}
.left-game-buttons {
    display: flex;
    justify-content: left;
    margin: var(--letterBoxMargin);
}

#message_banner {
    display: flex;
    align-items: center;
    font-size: 0.8em;
  position: relative;
  width: 110%;
  height: 3.5em;
  background-color: darkorange;
  text-align: center;
  
  box-sizing: border-box;
  padding: 0.5em;
  top: calc(-3.5em - 1rem) ; /* height - gameBox padding */
  margin-bottom: -3.5em; /* Leaving padding to push down gamebox-wrapper */
  
  transition: top 1s cubic-bezier(0.17, 0.04, 0.03, 0.94);
  margin-left: -1rem;
  margin-right: -1rem;
}
#message_banner.slide_down {
  top: -1rem; /* Gamebox padding */
}

#gameBox_wrapper {
  
  display: flex;
  flex-direction: column;
  align-items: center;

  width: 100%;
  height: 100%;
  top: 0; /* Needed for transition to have a starting point*/
  position: relative;
  
  transition: all 1s cubic-bezier(0.17, 0.04, 0.03, 0.94); 
}
#gameBox_wrapper.slide_down {
    /* banner originally sits below gamebox padding. banner has been raised the padding 
    so gamebox wrapper needs to also raise by that much, since 'top' is where banner would have originally sat*/
    top: calc(3.5em - 1rem); 
  margin-bottom: calc(3.5em - 1rem);
}


.bonus_icon {
  display: flex;
  height: max(8vw, 82px);
  width: max(8vw, 82px);
  margin: 1rem;
}
.bonus_icon.small {
  height: 2.3rem;
  width: 2.3rem;
  margin: 0;
}
.svg{
  height: 100%;
  width: 100%;
  /* Takes container's size */
}
#centre_bonus {
  border-left: dashed 0.05rem var(--almost-black);
  border-right: dashed 0.05rem var(--almost-black);
}

.bonus_col {
  padding: 1rem;
}
.bonus_w_description {
  display: flex;
  align-items:flex-start;
  position: relative;
  
}

.help-tip{
  display: flex;
  text-align: center;
  background-color: lightgray;
  border-radius: 50%;
  width: 0.4rem;
  height: 0.4rem;
  font-size: 0.5rem;
  line-height: 0.3rem;
  cursor: default;
  align-items:center;
  justify-content: center;
  position: relative;
}

.help-tip:before{
  content:'?';
  font-weight: bold;
  color:var(--almost-black);
}


.help-tip:hover p{
  visibility: visible;

  -webkit-animation: fadeIn 0.3s ease-in-out;
  animation: fadeIn 0.3s ease-in-out;

} 

.help-tip p{    /* The tooltip */
  visibility: collapse;
  text-align: center;
  background-color: #1E2021;
  padding: 2rem;
  position: absolute;
  top: 0;
  border-radius: 3px;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
  color: #FFF;
  margin-block: 0;
  z-index: 20;
  pointer-events: none;

}
.tooltipText.placeLeft {
  left: -8rem;
  right: auto;
}
.tooltipText.placeRight {
  left: auto;
  right: -8rem;
}

/* CSS animation */

@-webkit-keyframes fadeIn {
  0% { 
      opacity:0; 
      transform: scale(0.6);
  }

  100% {
      opacity:100%;
      transform: scale(1);
  }
}

@keyframes fadeIn {
  0% { opacity:0; }
  100% { opacity:100%; }
}

table {
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
  border: 3px solid var(--almost-black);
  position: relative;
  text-align: left;
}
caption {
  line-height: 3rem;
}
thead th:nth-child(1) {
  width: 12.5%;
}
thead th:nth-child(2) {
  width: 50%;
}
thead th:nth-child(3) {
  width: 15%;
}
thead th:nth-child(4) {
  width: 7.5%;
}
thead th:nth-child(5) {
  width: 7.5%;
}
thead th:nth-child(6) {
  width: 7.5%;
}
th, td {
  padding: 0.5rem;
  border: 2px dashed var(--almost-black)
}
thead th {
  text-align: left;
  border: 2px solid var(--almost-black);
  background: khaki;
}
td img.bonus_icon.small, th img.bonus_icon.small {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
tbody {
  font-size: 0.8rem;
}
tbody tr:nth-child(even) {
  background: lightgoldenrodyellow;
}


#login_modal span {
  margin: 0.25rem;
}


.loader {
  
  border: 4px solid #f3f3f3; /* Light grey */
  border-top: 4px solid #11191f; /* Blue-black */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 2s linear infinite;
  align-self: center;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.dot-spin {
    position: relative;
    width: 0.3em;
    height: 0.3em;
    border-radius: 0.15em;
    background-color: transparent;
    color: transparent;
    box-shadow: 0 -18px 0 0 #9880ff, 12.727926px -12.727926px 0 0 #9880ff, 18px 0 0 0 #9880ff, 12.727926px 12.727926px 0 0 rgba(152, 128, 255, 0), 0 18px 0 0 rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 0 rgba(152, 128, 255, 0), -18px 0 0 0 rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 0 rgba(152, 128, 255, 0);
    animation: dot-spin 1.5s infinite linear;
    margin: 1em;
  }
  
  @keyframes dot-spin {
    0%, 100% {
      box-shadow: 0 -18px 0 0 #9880ff, 12.727926px -12.727926px 0 0 #9880ff, 18px 0 0 0 #9880ff, 12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), 0 18px 0 -5px rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), -18px 0 0 -5px rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0);
    }
    12.5% {
      box-shadow: 0 -18px 0 -5px rgba(152, 128, 255, 0), 12.727926px -12.727926px 0 0 #9880ff, 18px 0 0 0 #9880ff, 12.727926px 12.727926px 0 0 #9880ff, 0 18px 0 -5px rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), -18px 0 0 -5px rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0);
    }
    25% {
      box-shadow: 0 -18px 0 -5px rgba(152, 128, 255, 0), 12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0), 18px 0 0 0 #9880ff, 12.727926px 12.727926px 0 0 #9880ff, 0 18px 0 0 #9880ff, -12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), -18px 0 0 -5px rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0);
    }
    37.5% {
      box-shadow: 0 -18px 0 -5px rgba(152, 128, 255, 0), 12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0), 18px 0 0 -5px rgba(152, 128, 255, 0), 12.727926px 12.727926px 0 0 #9880ff, 0 18px 0 0 #9880ff, -12.727926px 12.727926px 0 0 #9880ff, -18px 0 0 -5px rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0);
    }
    50% {
      box-shadow: 0 -18px 0 -5px rgba(152, 128, 255, 0), 12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0), 18px 0 0 -5px rgba(152, 128, 255, 0), 12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), 0 18px 0 0 #9880ff, -12.727926px 12.727926px 0 0 #9880ff, -18px 0 0 0 #9880ff, -12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0);
    }
    62.5% {
      box-shadow: 0 -18px 0 -5px rgba(152, 128, 255, 0), 12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0), 18px 0 0 -5px rgba(152, 128, 255, 0), 12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), 0 18px 0 -5px rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 0 #9880ff, -18px 0 0 0 #9880ff, -12.727926px -12.727926px 0 0 #9880ff;
    }
    75% {
      box-shadow: 0 -18px 0 0 #9880ff, 12.727926px -12.727926px 0 -5px rgba(152, 128, 255, 0), 18px 0 0 -5px rgba(152, 128, 255, 0), 12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), 0 18px 0 -5px rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), -18px 0 0 0 #9880ff, -12.727926px -12.727926px 0 0 #9880ff;
    }
    87.5% {
      box-shadow: 0 -18px 0 0 #9880ff, 12.727926px -12.727926px 0 0 #9880ff, 18px 0 0 -5px rgba(152, 128, 255, 0), 12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), 0 18px 0 -5px rgba(152, 128, 255, 0), -12.727926px 12.727926px 0 -5px rgba(152, 128, 255, 0), -18px 0 0 -5px rgba(152, 128, 255, 0), -12.727926px -12.727926px 0 0 #9880ff;
    }
  }

#login_loader {
  visibility: hidden;
}

.header {
    display: flex;
    position: relative;
    top:0;
    left:0;
    right:0;
  margin: 1rem 0.5rem;
  height: 2.5rem;
  text-align: center;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
}

.header button {
    width: 2.5rem;
}

.fullscreen-modal .header {
    /* Negate padding on .fullscreen-modal */
    margin-top: 0; 
    margin-left: -0.5rem;
    margin-right: -0.5rem;
}

.close-fs-modal-button {
    display: flex;
    position: absolute;
    right: 3%;
    align-items: center;
}

.horizontal-flex-cont {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.vertical-flex-cont {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    align-self: stretch;
}

.square {
    aspect-ratio: 1/1;
}
.flex-item {
    display: flex;
    justify-content: center;
    align-items: center;
    padding-block: 0;
    padding-inline: 0;
}
.flex-item div:has(img) {
    display: flex;
    justify-content: center;
    height:  80%;
    width: 80%;
}
.flex-item div img {
    max-width: 80%;
    min-width: 80%;
}


.formodal .button {
  width: fit-content;
  height: fit-content;
}

.invisible {
  visibility: hidden;
}
.minimal {
  background-color: transparent !important;
  border: 0 !important;
}
.reset {
  display: flex;
  height: 2rem;

}
.highlight {
  background-color: gold !important;
}

.game-stats {
    border-right: 0.2em solid var(--almost-black);
    border-left: 0.2em solid var(--almost-black);
    padding-left: 0.3em;
    padding-right: 0.3em;
    margin-bottom: 0.5em;
}

#next_game_box {
  padding-right: 0.5vw;
}
#next_game {
  font-weight: bold;
}
#guesses{
  display: flex;
  justify-self: left;
  align-self: flex-start;
  padding-left: 0.5vw;
  width: 20vw;
}
#guesses_made {
  margin-left: 0.5vw;
  font-weight: bold;
}
.wordRow.correct .letterBox{
    /*box-shadow: var(--rightglow)*/
    color: var(--correct-color);
    border-color: var(--correct-color-lighter);
}
.wordRow.correct .letterInput{
  border-color: var(--correct-color-darker) !important;
}
.wordRow.wrong .letterBox {
    color: var(--wrong-color);
    border-color: var(--wrong-color-lighter)
}
.wordRow.wrong .letterInput {
  border-color: var(--wrong-color-darker)
}
.rowHolder.finished .wordRow .letterBox {
  box-shadow: 0px 0px 24.192px var(--finishedColor), 
    0px 0px 13.824px var(--finishedColor), 
    0px 0px 8.064px var(--finishedColor), 
    0px 0px 4.032px var(--finishedColor), 
    0px 0px 1.152px var(--finishedColor), 
    0px 0px 0.576px var(--finishedColor);
  border-color: goldenrod !important;
  pointer-events: None;
}
.rowHolder.finished + button {
  background-color: hsl(43, 55%, 49%);
  pointer-events: None;
}
.letterInput:focus {
    background-color: #FBFBFB;
    /*
    box-shadow: 0px 0px 24.192px var(--box-focus), 
    0px 0px 13.824px var(--box-focus), 
    0px 0px 8.064px var(--box-focus), 
    0px 0px 4.032px var(--box-focus), 
    0px 0px 1.152px var(--box-focus), 
    0px 0px 0.576px var(--box-focus);*/
    transform: scale(1.1);
    border-color: #040404;
    box-shadow: 0 0 8px 4px darkgray;
}

/*
.missing {
    box-shadow: 0px 0px 24.192px rgb(247, 107, 26), 
    0px 0px 13.824px rgb(247, 107, 26), 
    0px 0px 8.064px rgb(247, 107, 26), 
    0px 0px 4.032px rgb(247, 107, 26), 
    0px 0px 1.152px rgb(247, 107, 26), 
    0px 0px 0.576px rgb(247, 107, 26) !important;
    border: 2px solid black !important;
}
.missing:focus {
    box-shadow: 0px 0px 24.192px violet, 
    0px 0px 13.824px violet, 
    0px 0px 8.064px violet, 
    0px 0px 4.032px violet, 
    0px 0px 1.152px violet, 
    0px 0px 0.576px violet !important;
    color: violet;
} */


.rowHolder {
    font-size: var(--rowHolder-font-size);
    border-radius: 1rem;
    height: max-content;
    display: flex;
    align-items: stretch;
    align-self: stretch;
    flex-direction: column;
    position: relative;
    
  }

.wordRow {
  border: 2px solid transparent;
  max-height: 5rem;
  justify-content: center;
}

.letterBox {
  position: relative;
  background-color: var(--almost-white);
  border: 0.08em solid var(--lighter-border);
  margin: var(--letterBoxMargin);

  box-sizing: border-box;
  outline: none !important;
  text-transform: uppercase;
  display: flex;
  flex: 1 1 0;
  justify-content: center;
  align-items: center;
  aspect-ratio: 1/1;
  max-width: 5rem;

  color: lightgrey;

  text-shadow: 
    var(--stroke-width) 0 0 var(--stroke-color),
        calc(var(--stroke-width) * -1) 0 0 var(--stroke-color),
        0 var(--stroke-width) 0 var(--stroke-color),
        0 calc(var(--stroke-width) * -1) 0 var(--stroke-color);
        text-shadow: calc(var(--stroke-width) * 1) calc(var(--stroke-width) * 0) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.9239) calc(var(--stroke-width) * 0.3827) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.7071) calc(var(--stroke-width) * 0.7071) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.3827) calc(var(--stroke-width) * 0.9239) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0) calc(var(--stroke-width) * 1) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.3827) calc(var(--stroke-width) * 0.9239) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.7071) calc(var(--stroke-width) * 0.7071) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.9239) calc(var(--stroke-width) * 0.3827) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -1) calc(var(--stroke-width) * 0) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.9239) calc(var(--stroke-width) * -0.3827) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.7071) calc(var(--stroke-width) * -0.7071) 0
        var(--stroke-color),
    calc(var(--stroke-width) * -0.3827) calc(var(--stroke-width) * -0.9239) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0) calc(var(--stroke-width) * -1) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.3827) calc(var(--stroke-width) * -0.9239) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.7071) calc(var(--stroke-width) * -0.7071) 0
        var(--stroke-color),
    calc(var(--stroke-width) * 0.9239) calc(var(--stroke-width) * -0.3827) 0
        var(--stroke-color);
}


.letterBox.bad {
  --diffColor: var(--wrong-color);
}

.rowHolder.ex{
    width: 67%;
    
    margin-left: auto;
    margin-right: auto;
}
.letterBox.ex {
    font-size: 1.2rem;
    margin: calc(var(--emLetterBoxMargin) * 0.67);
}
.letterInput.ex {
  --letterInput-border-radius: 24px;
}



/* FINISHED PUZZLE SHEEN */
.rowHolder.finished .letterBox:before, .rowHolder.finished .letterBox:after {
  transform: scaleX(0)
}
.rowHolder.finished:before {
  content: '';
  position: absolute;
  z-index: 1;
  height: 200%;
  width: calc(var(--letterBoxHeight) * 0.3);
  top: 0;
  left: 0;
  background: linear-gradient(to right, rgba(229, 172, 142, 0), rgba(255,255,255,0.5) 50%, rgba(229, 172, 142, 0));
  transform: rotate(30deg);
  transform-origin: top right;
  animation: sheen 6s ease-out 1s infinite;
}
@keyframes sheen {
  
    0% {transform: translateX(-100%) rotate(30deg) }
    35%, 100%{transform: translateX(3800%) rotate(30deg)}

  }

.letterBox.letterInput:before, .letterBox.letterInput:after{
  border-radius: calc(0.5em - 0.09em);
}
.letterBox:before {
  content: "";
  position: absolute;

  /* Size of box-shadow needs to be dynamic */
  --letter-guide-height: calc(var(--rowHolder-font-size) * 2);

  box-shadow: inset rgba(var(--same-letter-color), 0.3) 0px calc(var(--letter-guide-height) * 0.04), 
  inset rgba(var(--same-letter-color), 0.2) 0px calc(var(--letter-guide-height) * 0.07),
  inset  rgba(var(--same-letter-color), 0.1) 0px calc(var(--letter-guide-height) * 0.1);
  
  /* sides, top, bottom, radius, etc need to be calculated based on border size */
  top: 0px;
  bottom: 0px;
  left: -0px;
  right: -0px;

  transform: scaleX(0);
  transition: ease-in 0.3s;
}
.letterBox:after {
  transform: scaleX(0);
  transition: ease-in 0.3s;

  content: "";
    position: absolute;
    
    /* Size of box-shadow needs to be dynamic */
    --letter-guide-height: calc(var(--rowHolder-font-size) * 2);

    box-shadow: inset rgba(var(--same-letter-color), 0.4) 0px calc(var(--letter-guide-height) * -0.04), 
    inset rgba(var(--same-letter-color), 0.3) 0px calc(var(--letter-guide-height) * -0.07),
     inset rgba(var(--same-letter-color), 0.2) 0px calc(var(--letter-guide-height) * -0.1);
    
    /* sides, top, bottom etc need to be calculated based on border size */
    
    top: 0px;
    bottom: 0;
    left: -0px;
    right: -0px;
    /*
    border-radius: 32px;*/
}
.letterBox.below:after {
  transform: scaleX(1)
}
.letterBox.above:before {
  transform: scaleX(1)
}

.letterInput{
  position: relative;
  -webkit-tap-highlight-color: transparent;
  border: 0.09em solid var(--almost-black);
  border-radius: 0.5em;
  cursor: pointer;
  text-align: center;
  caret-color: transparent;
  text-transform: uppercase;
  transition: all 0.2s ease-in;
}

#fullLeaderboard {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 25;
  background: var(--almost-white);
  text-align: center;
  display: none;
}



#keyboard-cont {
    font-size: 2rem;
    padding: 0.2rem;
    height: 7.5rem;
    border-radius: 0.4rem;
    position: fixed;
    bottom: 2%;
    left: 50%;
    transform: translateX(-50%);
    margin-left: auto;
    margin-right: auto;
    display: flex; 
    justify-self: center;
    flex-direction: column;
    align-items: center;
    background-color:rgba(80, 80, 80);
    z-index: 11;
  }

  
  #keyboard-cont div {
    display: flex;
  }
  .first-row {
    display: flex;
  }
  .third-row {
    display: flex;
  }
  .second-row {
    display: flex;
    margin: 0.2rem 0;
  }
  
  .keyboard-button {
    width: 1.5rem;
    height: 2rem;
    font-weight: 700;
    font-size: 1rem;
    padding: 0.1rem;
    margin: 0.1rem;
    display: flex;
    align-items: center;
    align-content: center;
    justify-content: center;
    justify-self: center;
    text-align: center;
    cursor: pointer;
    text-transform: uppercase;
  }
  .keyboard-button.square {
    width: 2rem;
    
  }


.popup-modal {
    font-size: 0.8rem;
    display: flex;
    flex-direction: column;
    align-self: center;
    align-items: center;
    text-align: center;
    width: 18rem;
    box-shadow: var(--almost-black) 0px 0px 1rem 5px;

  border: 0.1rem solid var(--almost-black);
  position: absolute;
  padding: 1.8rem;
  z-index: 15;
  background-color: var(--almost-white);

  top: 7rem;
  border-radius: 2rem;

  visibility: hidden;
  /* transform: translateY(100vh); */
  transition: all 2s ease-in-out;
}

.popup-modal .header {
    font-size: 1.4em;
    font-weight: 600;
    margin-top: 0;
    margin-left: 0;
    margin-right: 0;
}

.popup-modal.opened {
    top: 7rem;
    transform: translateY(0%);
    visibility: visible;
}

.overlay{
  display: block;
  z-index: 5;
  pointer-events: all;
  background-color:rgba(0,0,0,0.5);
  border: none;
  backdrop-filter: blur(3px);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
#login_overlay {
  position: absolute;
  border-radius: inherit;

  /* width: 100%;
  height: 100% */
}
.overlay.closed {
  display: none;
  pointer-events: none;
}

.button.answerButton {
  font-size: 1.2em;
  color: black;  
  font-weight: bold;
  padding: 0.25em 0.5em;
  box-shadow: rgb(27, 143, 137) 0px 3px 2px 0px;
  text-transform: uppercase;
  background-color: rgb(29, 207, 219);
  margin: 0.8em;
  border-width: 0.08em;
  
}
.button.answerButton:active {
  background-color: #7a0404;
}
#answerBtn.finished {
  background-color: grey;
  pointer-events: none;
}
.textinput {
  height: 1.2em;
  margin: 0.3em;
  align-self: center;
  text-align: center;
  border-width: 0px;
  padding-left: 0px;
  padding-right: 0px;
  background-color: #D9D9D9;
}
#login_form .textinput {
  max-width: 100%;
  width: 100%;
  margin: 0.75vw, 0.75vw, 0 ,0;
}
